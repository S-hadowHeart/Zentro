import{r}from"./vendor-CZpL7EIb.js";import{u as j,j as A}from"./auth-D5haa8ya.js";const C=r.createContext(null);function x(){const i=r.useContext(C);if(!i)throw new Error("useTasks must be used within a TasksProvider");return i}function $({children:i}){const[u,a]=r.useState([]),[w,d]=r.useState(!1),{user:c,loading:k}=j(),p=k||w&&u.length===0,l=r.useCallback(async()=>{if(!c){a([]);return}d(!0);try{const o=localStorage.getItem("token");if(!o){a([]),d(!1);return}const e=await fetch("/api/tasks",{headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}});if(e.ok){const t=await e.json();a(t)}else a([])}catch(o){console.error("Error fetching tasks:",o),a([])}finally{d(!1)}},[c]);r.useEffect(()=>{!k&&c&&l()},[k,c,l]);const f=r.useCallback(o=>{a(o)},[]),h=r.useCallback(async o=>{try{const e=localStorage.getItem("token");if(!e)return;const t=await fetch("/api/tasks",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({title:o})});if(t.ok){const s=await t.json();return a(n=>[...n,s]),s}}catch(e){console.error("Error adding task:",e)}},[]),g=r.useCallback(async(o,e)=>{if(o)try{const t=await fetch(`/api/tasks/${o}/pomodoro`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify({duration:e||0})});if(t.ok){const s=await t.json();a(n=>n.map(y=>y._id===s._id?s:y))}else{const s=await t.json();console.error("Failed to increment pomodoro count:",s)}}catch(t){console.error("Error incrementing pomodoros for task:",t)}},[]),m=r.useCallback(async o=>{try{const e=localStorage.getItem("token");if(!e)return;(await fetch(`/api/tasks/${o}/toggle`,{method:"PATCH",headers:{Authorization:`Bearer ${e}`}})).ok&&a(s=>s.map(n=>n._id===o?{...n,completed:!n.completed}:n))}catch(e){console.error("Error toggling task:",e)}},[]),T=r.useCallback(async o=>{try{const e=localStorage.getItem("token");if(!e)return;(await fetch(`/api/tasks/${o}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`}})).ok&&a(s=>s.filter(n=>n._id!==o))}catch(e){console.error("Error deleting task:",e)}},[]),E=r.useMemo(()=>({tasks:u,loading:p,fetchTasks:l,addTask:h,toggleTask:m,deleteTask:T,updateTasks:f,incrementPomodorosForTask:g}),[u,p,l,h,m,T,f,g]);return A.jsx(C.Provider,{value:E,children:i})}export{$ as T,x as u};
//# sourceMappingURL=tasks-kJLDvNEe.js.map
