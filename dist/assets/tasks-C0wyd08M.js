import{r as o}from"./vendor-Bliau07G.js";import{u as b,j}from"./auth-RuooUlhb.js";const w=o.createContext(null);function P({children:i}){const[f,r]=o.useState([]),[A,c]=o.useState(!1),{user:d,loading:k}=b(),l=o.useRef(null),p=o.useRef(!1),h=k||A&&f.length===0,u=o.useCallback(async t=>{if(!t){r([]),c(!1);return}c(!0);try{const e=localStorage.getItem("token");if(!e){r([]),c(!1);return}const s=await fetch("/api/tasks",{headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}});if(s.ok){const a=await s.json();r(a)}else r([])}catch(e){console.error("Error fetching tasks:",e),r([])}finally{c(!1)}},[]);o.useEffect(()=>{l.current=u},[u]);const g=o.useCallback(t=>{r(t)},[]);o.useEffect(()=>{var t;k||(d?p.current||(t=l.current)==null||t.call(l,d._id).finally(()=>{p.current=!0}):(r([]),c(!1),p.current=!1))},[k,d]);const m=o.useCallback(async t=>{try{const e=localStorage.getItem("token");if(!e)return;const s=await fetch("/api/tasks",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({title:t})});if(s.ok){const a=await s.json();return r(n=>[...n,a]),a}}catch(e){console.error("Error adding task:",e)}},[]),T=o.useCallback(async(t,e)=>{if(t)try{const s=await fetch(`/api/tasks/${t}/pomodoro`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify({duration:e})});if(s.ok){const a=await s.json();r(n=>n.map(E=>E._id===a._id?a:E))}}catch(s){console.error("Error updating task:",s)}},[]),y=o.useCallback(async t=>{try{const e=localStorage.getItem("token");if(!e)return;(await fetch(`/api/tasks/${t}/toggle`,{method:"PATCH",headers:{Authorization:`Bearer ${e}`}})).ok&&r(a=>a.map(n=>n._id===t?{...n,completed:!n.completed}:n))}catch(e){console.error("Error toggling task:",e)}},[]),C=o.useCallback(async t=>{try{const e=localStorage.getItem("token");if(!e)return;(await fetch(`/api/tasks/${t}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`}})).ok&&r(a=>a.filter(n=>n._id!==t))}catch(e){console.error("Error deleting task:",e)}},[]),S=o.useMemo(()=>({tasks:f,loading:h,fetchTasks:u,addTask:m,toggleTask:y,deleteTask:C,updateTasks:g,incrementPomodorosForTask:T}),[f,h,u,m,y,C,g,T]);return j.jsx(w.Provider,{value:S,children:i})}function z(){const i=o.useContext(w);if(!i)throw new Error("useTasks must be used within a TasksProvider");return i}export{P as T,z as u};
//# sourceMappingURL=tasks-C0wyd08M.js.map
